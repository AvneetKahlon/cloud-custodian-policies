# This is a base workflow to help you get started and run a custodian command.
name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
  #  branches: [ cicd ]
  #pull_request:
  #  branches: [ cicd ]
  schedule:
    - cron: '0 14 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      #export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} 
      #export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #export AWS_ROLE_TO_ASSUME=${{ secrets.AWS_ROLE_TO_ASSUME }}
      #
      #export AWS_ACCESS_KEY_ID=${{ secrets.RAM_AWS_ACCESS_KEY_ID }} 
      #export AWS_SECRET_ACCESS_KEY=${{ secrets.RAM_AWS_SECRET_ACCESS_KEY }}
      #export AWS_SESSION_TOKEN=${{ secrets.RAM_AWS_SESSION_TOKEN }}
 
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          sudo pip3 install --upgrade pip
          export PATH="/home/vsts/.local/bin:$PATH"
          pip3 install awscli --upgrade 
          pip install c7n --upgrade
          export AWS_ACCESS_KEY_ID=${{ secrets.RAM_AWS_ACCESS_KEY_ID }} 
          export AWS_SECRET_ACCESS_KEY=${{ secrets.RAM_AWS_SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ secrets.RAM_AWS_SESSION_TOKEN }}
          export AWS_DEFAULT_REGION=ca-central-1 
          export PATH="/home/runner/.local/bin:$PATH"
          echo __________________________________________________________________
          custodian run --dryrun -s out policy/common/global/vpc-logging.yml
          grep Timestamp out/flow-logs-enabled//metadata.json
          echo __________________________________________________________________
          

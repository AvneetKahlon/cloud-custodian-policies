# This workflow is to run Policies on Push and Pull Requests.
name: CI_onPushOrPullReq

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events for the main branch
  push:
<<<<<<< HEAD
#    branches: [569-581-controls]
  pull_request:
    branches: [569-581-controls]
=======
    branches: [ main ]
  pull_request:
    branches: [ main ]
>>>>>>> main
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell to install pip, awscli and c7n
      - name: Run a multi-line script
        run: |
          sudo pip3 install --upgrade pip
          export PATH="/home/vsts/.local/bin:$PATH"
          pip3 install awscli --upgrade
          pip install c7n --upgrade

      # Picksup Creds from Secrets set on github
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
          role-session-name: startup-sample-project-github-action
          role-skip-session-tagging: true

      # Runs custodian for all the newly added and modified YAML files
      - id: files
        uses: jitterbit/get-changed-files@v1
      - run: |
          export PATH="/home/runner/.local/bin:$PATH"
          for changed_file in ${{ steps.files.outputs.added_modified }}; do
            echo "Checking file ${changed_file}."
            if [[ ${changed_file} == *yml ]]; then
              if [[ ${changed_file} == policy* ]]; then
                echo __________________________________________________________________
                echo "Running custodian on this policy file ${changed_file}."
                if [[ ${{ github.event_name }} == 'pull_request' ]]; then
                   custodian run --dryrun -s out ${changed_file}
                else
                   custodian run -s out ${changed_file}
                fi
                echo __________________________________________________________________
              fi
            fi
          done
